name: Backend CI/CD

on:
  push:
    branches:
      - main # This workflow runs when you push to the 'main' branch
    # If your backend code is in a subdirectory (e.g., 'my-project/backend/'), uncomment and adjust:
    # paths:
    #   - 'backend/**' 

  pull_request:
    branches:
      - main # This workflow runs when a pull request is opened targeting 'main'
    # If your backend code is in a subdirectory, uncomment and adjust:
    # paths:
    #   - 'backend/**' 

env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }} # Uses your GitHub repo name (e.g., 'your-username/your-repo')

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest # The type of virtual machine to run the job on
    permissions:
      contents: read # Permission to read your repository content
      packages: write # Permission to push images to GHCR (Crucial!)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to get your code onto the runner

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3 # Action to log into GHCR
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Your GitHub username
          password: ${{ secrets.GITHUB_TOKEN }} # Special token provided by GitHub Actions for authentication

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Give this step an ID to refer to its outputs
        uses: docker/metadata-action@v5 # Action to generate intelligent Docker tags
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest # Always tag the latest build as 'latest'
            type=sha,format=long # Also tag with the full commit SHA (for specific versions)

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Action to build and push the Docker image
        with:
          context: . # The build context: '.' means the current directory (your backend root)
          # If your Dockerfile is in a subdirectory (e.g., 'my-project/backend/Dockerfile'), change context to:
          # context: ./backend
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the 'meta' step
          labels: ${{ steps.meta.outputs.labels }} # Use the labels generated by the 'meta' step

      - name: Verify Docker image pushed (Optional)
        run: |
          echo "Docker image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}" pushed successfully.
          echo "You can view it at https://github.com/${{ github.repository }}/pkgs/container/${{ github.repository }}"

      # --- Deployment Step (Phase 3) will go here later ---